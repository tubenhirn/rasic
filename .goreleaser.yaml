# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
builds:
  - main: ./main.go
    id: "rasic"
    binary: "{{ .Target }}/rasic"
    no_unique_dist_dir: true
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: linux
        goarch: arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-X main.appVersion={{.Env.APP_VERSION}}"

  - main: ./plugins/source/gitlab/gitlab.go
    id: "source_gitlab"
    binary: "{{ .Target }}/plugins/bin/source_gitlab"
    no_unique_dist_dir: true
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: linux
        goarch: arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-X main.appVersion={{.Env.APP_VERSION}}"

  - main: ./plugins/source/github/github.go
    id: "source_github"
    binary: "{{ .Target }}/plugins/bin/source_github"
    no_unique_dist_dir: true
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: linux
        goarch: arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-X main.appVersion={{.Env.APP_VERSION}}"

  - main: ./plugins/reporter/gitlab/gitlab.go
    id: "reporter_gitlab"
    binary: "{{ .Target }}/plugins/bin/reporter_gitlab"
    no_unique_dist_dir: true
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: linux
        goarch: arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-X main.appVersion={{.Env.APP_VERSION}}"

  - main: ./plugins/reporter/github/github.go
    id: "reporter_github"
    binary: "{{ .Target }}/plugins/bin/reporter_github"
    no_unique_dist_dir: true
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: linux
        goarch: arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-X main.appVersion={{.Env.APP_VERSION}}"

archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      amd64: x86_64
    wrap_in_directory: false

# gitlab_urls:
  # use_package_registry: true

brews:
  - tap:
      owner: tubenhirn
      name: homebrew-formulae
      branch: main
      # token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    dependencies:
      - trivy

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    description: "Wrapper for trivy scanner with incident creation."

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: false
